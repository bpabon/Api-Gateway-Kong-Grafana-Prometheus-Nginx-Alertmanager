# Configuración basica
worker_processes auto;            # Usa tantos procesos worker como núcleos CPU tenga la máquina
worker_cpu_affinity auto;          # Afinidad automática para CPU (Linux)
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
events {
    worker_connections 1024;  # Número máximo de conexiones por worker (ajusta según límite SO)
    use epoll;                     # epoll es la mejor opción en Linux
    multi_accept off;               # Permite aceptar múltiples conexiones a la vez
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logs
    access_log /var/log/nginx/access.log combined buffer=32k flush=1m;

    # Seguridad básica
    server_tokens off;

    # Optimiza buffers
    client_body_buffer_size 16k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # Tiempo de keepalive
    keepalive_timeout 65s;
    keepalive_requests 10000;

    # Timeouts para no bloquear recursos mucho tiempo
    client_body_timeout 10s;
    client_header_timeout 10s;
    send_timeout 10s;

    # Gzip para optimizar transferencia
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Proxy Settings comunes
    proxy_connect_timeout 5s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    proxy_buffer_size 8k;
    proxy_buffers 16 16k;
    proxy_busy_buffers_size 32k;
    proxy_temp_file_write_size 64k;

    # Limita requests para evitar DoS (rate limiting básico)
    limit_req_zone $binary_remote_addr zone=one:10m rate=30r/s;

    # Servidor principal
    server {
        listen 80;
        # listen 443 ssl http2;
        server_name midominio.com www.midominio.com;

        # Seguridad HTTP Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline';" always;

        # Rate limiting por IP
        limit_req zone=one burst=60 nodelay;

        # Root para certificados o archivos estáticos
        root /var/www/html;
        # Proxy a backend (ejemplo kong en el puerto 8000)
        location / {
            proxy_pass http://kong:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Buffering para backend
            proxy_buffering on;
            # WebSocket support (si se usa)
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection $connection_upgrade;
        }
        location /healthNginx {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
        # location /socket.io/{
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_pass      http://kong:8000/socket.io/;
        # }
                # Manejo de errores comunes
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }
}
# Configuración para manejar con cerbot
# server {
#     listen 80;
#     server_name midominio.com;
#     server_tokens off;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name midominio.com;
#     server_tokens off;

#     ssl_certificate /etc/letsencrypt/live/midominio.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/midominio.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         proxy_pass  http://midominio.com;
#         proxy_set_header    Host                $http_host;
#         proxy_set_header    X-Real-IP           $remote_addr;
#         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
#     }
# }